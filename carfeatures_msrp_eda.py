# -*- coding: utf-8 -*-
"""CarFeatures_MSRP_EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yi_8WxZlXw61wYq71oegjlFgElE34nQ6
"""

#Import the required libraries for Exploratory Data Analysis (EDA)
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

#Load the data into the data frame
df = pd.read_csv(r"data.csv")

#Display the top 10 rows
df.head(10)

#Display the bottom 10 rows
df.tail(10)

#Check the types of data
df.dtypes

df.info

df.describe()

df.isnull().sum()

df

#Rename the columns
#Keep "MSRP" column name???
df = df.rename(columns={"Engine HP": "HP", "Engine Cylinders": "Cylinders", "Transmission Type": "Transmission", "Driven_Wheels": "Drive Mode", "highway MPG": "MPG-H", "city mpg": "MPG-C", "MSRP": "Price" })

df.shape

#Drop duplicate rows
duplicate_rows_df = df[df.duplicated()]
print("number of duplicate rows: ", duplicate_rows_df.shape)

#View the total count of rows before dropping duplicates
df.count()

#Drop duplicate rows
df = df.drop_duplicates()
df.head(5)

#View the total count of rows after dropping duplicate rows
df.count()

#Display null/missing values to be dropped
#Investigate missing values and rectify if necessary???
print(df.isnull().sum())

#Drop missing values
df = df.dropna()

#View total count of rows after dropping missing values
df.count()

#Display null/missing values after dropping missing values
print(df.isnull().sum())

#Display visual box plot to view and/or determine outliers with price column
sns.boxplot(x=df['Price'])

#Display visual box plot to view and/or determine outliers with HP column
sns.boxplot(x=df['HP'])

#Display visual box plot to view and/or determine outliers with Cylinders column
sns.boxplot(x=df['Cylinders'])

#View quantile information
Q1 = df.quantile(0.25)
Q3 = df.quantile(0.75)
IQR = Q3 - Q1
print(IQR)

#Remove outliers
df = df[~((df < (Q1 - 1.5 * IQR)) | (df > (Q3 + 1.5 * IQR))).any(axis=1)]

#Display Data set array shape
df.shape

#Histogram chart of different car manufacturers of who has the most number of cars.
df.Make.value_counts().nlargest(40).plot(kind='bar', figsize=(10,5))
plt.title("Number of cars by make")
plt.ylabel('Number of cars')
plt.xlabel('Make')

#Heat Maps
plt.figure(figsize=(10,5))
c= df.corr()
sns.heatmap(c,cmap="BrBG",annot=True)
c

#Scatterplot
fig, ax = plt.subplots(figsize=(10,6))
ax.scatter(df['HP'], df['Price'])
ax.set_xlabel('HP')
ax.set_ylabel('Price')
plt.show()

